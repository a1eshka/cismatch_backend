# Generated by Django 5.1.2 on 2025-01-23 15:20

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('server', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServerType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, verbose_name='Название типа')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('updateAt', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Тип сервера',
                'verbose_name_plural': 'Типы серверов',
            },
        ),
        migrations.CreateModel(
            name='ThirdPartyServer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip', models.CharField(max_length=100, verbose_name='IP адрес')),
                ('port', models.IntegerField(verbose_name='Порт')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Платный сервер')),
                ('is_boosted', models.BooleanField(default=False, verbose_name='Поднят в списке')),
                ('boost_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата окончания поднятия')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_third_party_servers', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
                ('server_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='server.servertype', verbose_name='Тип сервера')),
            ],
            options={
                'verbose_name': 'Сторонний сервер',
                'verbose_name_plural': 'Сторонние серверы',
            },
        ),
    ]
