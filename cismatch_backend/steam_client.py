import asyncio
import os
from steampy.client import SteamClient
from steampy.models import Asset, GameOptions



STEAM_API_KEY = os.getenv("STEAM_API_KEY")
STEAM_USERNAME = os.getenv("STEAM_USERNAME")
STEAM_PASSWORD = os.getenv("STEAM_PASSWORD")
SHARED_SECRET = os.getenv("STEAM_SHARED_SECRET")
IDENTITY_SECRET = os.getenv("STEAM_IDENTITY_SECRET")
STEAM_GUARD_PATH = os.getenv("STEAM_GUARD_PATH")

proxies =  {
    "https": "http://zzraqY:wzTqwz@195.158.193.249:8000"
} 
  
client = SteamClient(STEAM_API_KEY,proxies=proxies) #,proxies=proxies

async def start_bot():
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –≤ Steam"""
    try:
        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ –≤ Steam...")
        #session_cookies = [cookie for cookie in client._session.cookies if cookie.name == 'sessionid']
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ cookies —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
        #for cookie in session_cookies[1:]:
        #    client._session.cookies.remove(cookie.name)
        await asyncio.to_thread(client.login, STEAM_USERNAME, STEAM_PASSWORD, STEAM_GUARD_PATH)
        print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ Steam!")
        if client.is_session_alive():
            print("‚úÖ –°–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞, –±–æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!")
        else:
            print("‚ö†Ô∏è –°–µ—Å—Å–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞, –≤–æ–∑–º–æ–∂–µ–Ω —Ä–∞–∑–ª–æ–≥–∏–Ω!")
            await asyncio.to_thread(client.login, STEAM_USERNAME, STEAM_PASSWORD, STEAM_GUARD_PATH)
            if client.is_session_alive():
                print("‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!")
            return False
        
        return True    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return False


async def create_trade_offer(user_id, asset_id, skin_name, offer_price, trade_url):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–µ–π–¥-–æ—Ñ—Ñ–µ—Ä–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º URL (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–¥–∞–µ—Ç –ø—Ä–µ–¥–º–µ—Ç)"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏
        print("üïµÔ∏è‚Äç‚ôÇÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏...")
        await start_bot()
        if not client.is_session_alive():
            print("‚ö†Ô∏è –°–µ—Å—Å–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º –∫–ª–∏–µ–Ω—Ç–∞...")
            session_status = await start_bot()
            if not session_status:
                raise Exception("–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞!")

        print(f"üì¶ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ {skin_name} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–º –ø–µ—Ä–µ–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        game = GameOptions.CS
        item = Asset(asset_id, game)
        items_from_them = [item]  # CS:GO –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
        items_from_me = []  # –ú—ã –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
        trade_offer_url = trade_url
        # –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ–π–¥ —á–µ—Ä–µ–∑ URL
        trade_response = await asyncio.to_thread(
            client.make_offer_with_url,
            items_from_me,
            items_from_them,
            trade_offer_url,
            message=f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ {offer_price}—Ä—É–±. –∑–∞ {skin_name}!"
        )
        print(f"–û—Ç–≤–µ—Ç –æ—Ç API —Ç—Ä–µ–π–¥–∞: {trade_response}")
        trade_offer_id = trade_response.get("tradeofferid")
        if trade_offer_id:
            print(f"‚úÖ –¢—Ä–µ–π–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! ID: {trade_offer_id}")

            return trade_offer_id
        else:
            raise Exception("‚ùå –û—à–∏–±–∫–∞: —Ç—Ä–µ–π–¥ –Ω–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç—Ä–µ–π–¥–∞: {e}")
        return None

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –±–æ—Ç–∞
async def main():
    session_status = await start_bot()
    if session_status:
        print("–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

if __name__ == "__main__":
    asyncio.run(main())